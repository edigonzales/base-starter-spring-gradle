buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    id 'com.vaadin'
}

defaultTasks("clean", "vaadinBuildFrontend", "build")

apply from: "$rootDir/gradle/versioning.gradle"

group = 'ch.so.agi.datahub'

java {
    sourceCompatibility = '21'
    targetCompatibility = '21'
}

compileJava {
    options.compilerArgs.addAll(['--release', '21'])
}

bootJar {
   archiveFileName = archiveBaseName.get() + "-" + version + "-exec.jar"
}

repositories {
    mavenCentral()
    maven { setUrl("https://maven.vaadin.com/vaadin-addons") }
    maven { url 'https://jars.interlis.ch/' }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    implementation('com.vaadin:vaadin-spring-boot-starter')
    implementation 'org.parttio:line-awesome:2.0.0'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

dependencyManagement {
    imports {
        mavenBom "com.vaadin:vaadin-bom:$vaadinVersion"
    }
}

vaadin {
    optimizeBundle = false
}

tasks.named('test') {
    useJUnitPlatform()
}


